import tkinter as tk
import math

root = tk.Tk()
root.title("SCIENTIFIC_CALCULATOR_GROUP6_LOOP_VERSION")
root.geometry("520x600")
root.resizable(False, False)

bg = "#000000"
btn = "#3c3f41"
sci = "#2d2d2d"
op = "#3c3f41"
equal = "#1a5b86"
clear_color = "#330d0d"
del_color = "#330d0d"
text_color = "#FFFFFF"

root.configure(bg=bg)

entry = tk.Entry(root, font=("Arial", 22), fg="#000000", bg="#ffffff", justify="right")
entry.pack(pady=20, padx=15, fill="x", ipady=9)

def click(val):
    entry.insert(tk.END, val)

def clear():
    entry.delete(0, tk.END)

def delete_one():
    entry.delete(len(entry.get()) - 1, tk.END)

def format_number(num):
    if isinstance(num, int) or (isinstance(num, float) and num.is_integer()):
        return "{:,}".format(int(num))
    else:
        return "{:,}".format(round(num, 10))

def calc():
    try:
        expr = entry.get()
        expr = expr.replace("×", "*").replace("÷", "/").replace("^", "**").replace("π", str(math.pi))
        
        #temporary code/value A-D
        
        a, b, c, d = 2, 4, 6, 8

        functions = {
            "√": lambda x: math.sqrt(float(x)),
            "!": lambda x: math.factorial(int(x)),
            "log(": lambda x: math.log10(float(x)),
            "log₂(": lambda x: math.log2(float(x)),
            "∑ᴮa ∑ᴰc": lambda x: sum(i + j for i in range(a, b + 1) for j in range(c, d + 1)),
            "∏ᴮa ∏ᴰc": lambda x: math.prod(i * j for i in range(a, b + 1) for j in range(c, d + 1)),
            "A!+B!": lambda x: math.factorial(a) + math.factorial(b),
            "A!/B!": lambda x: math.factorial(a) / math.factorial(b),
        }

        for symbol, func in functions.items():
            if symbol in expr:
                num = expr.replace(symbol, "").replace(")", "")
                result = func(num)
                entry.delete(0, tk.END)
                entry.insert(0, format_number(result))
                return

        result = eval(expr)
        entry.delete(0, tk.END)
        entry.insert(0, format_number(result))

    except Exception:
        entry.delete(0, tk.END)
        entry.insert(0, "Error")

buttons = [
    ['DEL', 'CLEAR', '+/-', '+', 'FLR', 'CEIL', 'INT'],
    ['7', '8', '9', '-', '//', '%', 'x!'],
    ['4', '5', '6', '×', '√', '∛', '∑ᴮa'],
    ['1', '2', '3', '÷', 'x^y', ' x^y^z', '∏ᴮa'],
    ['0', '.', '=', '∑ᴮa ∑ᴰc', '∏ᴮa ∏ᴰc'],
    ['SET', 'log₂ x', 'log x'],
    ['A', 'B', 'C', 'D', 'A!+B!', 'A!/B!'],
    ['xy', 'x+y', 'x^y', 'Cx', 'x+c', 'x^c']
]

for row in buttons:
    f = tk.Frame(root, bg=bg)
    f.pack(expand=True, fill="both", pady=1)
    for b in row:
        color = btn
        if b in ['+', '-', '×', '÷', '+/-']:
            color = op
        elif b in ['+/-', '+', 'FLR', 'CEIL', 'INT', '-', '//', '%', 'x!', '×', '√', '∛',
                   '∑ᴮa', 'x^y', ' x^y^z', '∏ᴮa', '∑ᴮa ∑ᴰc', '∏ᴮa ∏ᴰc', 'SET', 'log₂ x', 
                   'log x', 'A', 'B', 'C', 'D', 'A!+B!', 'A!/B!', 'xy', 'x+y', 'x^y', 'Cx', 'x+c', 'x^c']:
            color = sci
        elif b == 'CLEAR':
            color = clear_color
        elif b == 'DEL':
            color = del_color
        elif b == '=':
            color = equal

        cmd = lambda x=b: click(x)
        if b == '=':
            cmd = calc
        elif b == 'CLEAR':
            cmd = clear
        elif b == 'DEL':
            cmd = delete_one
        elif b == 'x!':
            cmd = lambda: click("!")
        elif b == '√':
            cmd = lambda: click("√")
        elif b == 'log₂ x':
            cmd = lambda: click("log₂(")
        elif b == 'log x':
            cmd = lambda: click("log(")
        elif b == '∑ᴮa ∑ᴰc':
            cmd = lambda: click("")
        elif b == '∏ᴮa ∏ᴰc':
            cmd = lambda: click("")

        tk.Button(
            f, text=b, bg=color, fg=text_color,
            font=("Arial", 13), height=2, width=6,
            command=cmd
        ).pack(side="left", expand=True, fill="both", padx=1, pady=1)

root.mainloop()

